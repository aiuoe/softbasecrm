name: Build and deploy .NET Backend app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: webcreek-v4-svc-qa
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '6.0.302'
  BACKEND_SOLUTION_NAME: './aspnet-core/SBCRM.Web.sln'
  BACKEND_HOST_PROJECT: './aspnet-core/src/SBCRM.Web.Host/SBCRM.Web.Host.csproj'
  TARGET_ENVIRONMENT: QA

on:
  push:
    branches:
      - "release/qa"
    paths:
     - 'aspnet-core/**'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: false
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build
        run: dotnet build ${{ env.BACKEND_SOLUTION_NAME }} --configuration Release

      - name: Publish
        run: dotnet publish ${{ env.BACKEND_HOST_PROJECT }} -c Release -o ${{env.DOTNET_ROOT}}/sb-app

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/sb-app

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.QA_AZURE_WEBAPP_BACKEND_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      

      - name: Google Chat Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: '${{ env.TARGET_ENVIRONMENT }} Backend deployment NÂ°${{ github.run_number }}'
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
        if: always()
        
        
        
